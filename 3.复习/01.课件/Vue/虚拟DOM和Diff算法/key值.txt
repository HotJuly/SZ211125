1.key值的使用
	当使用状态数据遍历产生多个节点的时候,需要给每个节点都添加上一个唯一的key值

2.常用作key值的数据
	1.遍历得到的数据中的唯一标识,例如:id,vid
	2.遍历得到的下标,例如:index
	3.遍历得到的数据本身,例如:item

3.key值的作用
	与diff算法有关
	当遍历的数据发生变化的时候,Vue会根据当前的数据生成全新的虚拟DOM树,并与旧的虚拟DOM树进行对比,找到可以复用的真实DOM,对其进行复用
		key值就是比较过程中重要的数据

	first render:
		1.将template字符串编译成render函数
		2.调用render函数,并配合当前的数据,生成虚拟DOM树
		3.根据虚拟DOM树生成真实DOM树
		4.将得到的真实DOM树替换掉页面上的el元素,从而实现显示效果

	update render:
		1.调用render函数,并配合最新的数据,生成全新的虚拟DOM树
		2.比较新旧两棵虚拟DOM树,找到可以复用的真实DOM节点
		3.期间如果遇到没有可以复用的真实DOM,就直接创建全新的真实DOM,来补齐
		4.将最新的真实DOM树替换掉页面上的指定区域

		其中,流程2和3就是diff算法

4.如果使用下标作为key值,会出现什么问题?
	案例1:input案例
		diff算法是否有生效?
			有
		出现问题:由于key值是下标的问题,导致节点复用错误

	案例2:商品排序案例
		diff算法是否有生效?
			有想要复用节点,但是都复用失败了
		出现问题:虽然key都是下标,能找到相同的key值的节点,但是使用的数据不同,导致节点复用失败

5.总结
	遍历数据的时候,如果该数据之后不会发生变化,可以使用下标作为key值
			如果数据会发生变化,一定要使用唯一标识作为key值

	只要服务器返回的数据不发生变化,那么前端的节点就能一直复用下去












